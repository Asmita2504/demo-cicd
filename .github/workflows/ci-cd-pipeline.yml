name: CI CD Pipeline

on:
  push:
    branches:
      - dev
      - beta
      - main
  pull_request:
    branches:
      - dev
      - beta
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Run Checkstyle
        run: mvn checkstyle:check

      - name: Run tests
        run: mvn test

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: demo-cicd-jar
          path: target/*.jar

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: demo-cicd-jar
          path: target/

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t asmitasatpute/demo-cicd:${{ github.sha }} -t asmitasatpute/demo-cicd:latest .

      - name: Push Docker image
        run: |
          docker push asmitasatpute/demo-cicd:${{ github.sha }}
          docker push asmitasatpute/demo-cicd:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Deploy to Prod server via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: 22
          script: |
            cd /var/www/myapp
            docker-compose pull
            docker-compose up -d